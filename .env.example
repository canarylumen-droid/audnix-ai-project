# ===================================
# AUDNIX AI - COMPREHENSIVE ENVIRONMENT VARIABLES
# ===================================

# -----------------
# DATABASE CONFIGURATION
# -----------------

# Supabase Configuration (Required for production)
POSTGRES_URL="postgres://postgres.zadfqicqbnqyvzcfebzy:zsEMUGPgQQ1w2kZF@aws-1-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require&supa=base-pooler.x"
POSTGRES_USER="postgres"
POSTGRES_HOST="db.zadfqicqbnqyvzcfebzy.supabase.co"
SUPABASE_JWT_SECRET="THn8HMAmiP8tpTYl617Bqr3Hh/3VXtoxYH50mIzhBjwoPx3N7QyEKEpbINENcN5EnRdAqDhCDX9cNVqbpRZdSA=="
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InphZGZxaWNxYm5xeXZ6Y2ZlYnp5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE2NDIyOTcsImV4cCI6MjA3NzIxODI5N30.VEc3_SC6H7hE6E1RpkKm16pjz74T7UvGy8b2SZx6TqA"
POSTGRES_PRISMA_URL="postgres://postgres.zadfqicqbnqyvzcfebzy:zsEMUGPgQQ1w2kZF@aws-1-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require&pgbouncer=true"
POSTGRES_PASSWORD="zsEMUGPgQQ1w2kZF"
POSTGRES_DATABASE="postgres"
SUPABASE_URL="https://zadfqicqbnqyvzcfebzy.supabase.co"
SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InphZGZxaWNxYm5xeXZ6Y2ZlYnp5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE2NDIyOTcsImV4cCI6MjA3NzIxODI5N30.VEc3_SC6H7hE6E1RpkKm16pjz74T7UvGy8b2SZx6TqA"
NEXT_PUBLIC_SUPABASE_URL="https://zadfqicqbnqyvzcfebzy.supabase.co"
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InphZGZxaWNxYm5xeXZ6Y2ZlYnp5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MTY0MjI5NywiZXhwIjoyMDc3MjE4Mjk3fQ.xgcYxfrkgy6PQCUUjoylwabzMR9lhi5ERpYWe_qlcfw"
POSTGRES_URL_NON_POOLING="postgres://postgres.zadfqicqbnqyvzcfebzy:zsEMUGPgQQ1w2kZF@aws-1-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require"
PGVECTOR_ENABLED=true

# Redis Configuration (Required for BullMQ workers)
# Install Redis locally or use Redis Cloud: https://redis.com/cloud/
REDIS_URL=redis://localhost:6379

# -----------------
# AI & LANGUAGE MODELS
# -----------------

# OpenAI Configuration (Required for AI features)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=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
OPENAI_MODEL=gpt-4o-mini

# Supermemory (Optional - for enhanced memory features)
# Get API key from: https://supermemory.ai
SUPERMEMORY_API_KEY=sm_KFU3tHMskbq9HdUe55fHVA_QjUyXxpKyYvhxMiBESPSLmGNMVSYhJTvncNxyvAFmkOEfusQfAiQnJLIsnoDoOdO

# ElevenLabs Voice Cloning (Required for voice features)
# Get your API key from: https://elevenlabs.io/api
ELEVENLABS_API_KEY=sk_42dc5171791448a7d2f25f85c7da4fbfad65febeff4ffb04

# -----------------
# OAUTH CONFIGURATIONS
# -----------------

# === INSTAGRAM OAUTH ===
# Create Facebook App: https://developers.facebook.com/apps
# 1. Create new app → Type: Business
# 2. Add Instagram Basic Display product
# 3. Add Instagram Graph API
# 4. Configure OAuth Redirect URI: http://localhost:5000/api/oauth/instagram/callback
# 5. Add test users in App Roles
INSTAGRAM_APP_ID=your-instagram-app-id
INSTAGRAM_APP_SECRET=your-instagram-app-secret
INSTAGRAM_PAGE_ID=your-page-id
INSTAGRAM_REDIRECT_URI=http://localhost:5000/api/oauth/instagram/callback
INSTAGRAM_WEBHOOK_TOKEN=your-webhook-verification-token

# === WHATSAPP BUSINESS API ===
# Setup WhatsApp Business: https://developers.facebook.com/docs/whatsapp/cloud-api/get-started
# 1. Create Facebook App → Add WhatsApp product
# 2. Generate permanent token or use OAuth
# 3. Get Phone Number ID from WhatsApp → API Setup
# 4. Configure webhooks: http://localhost:5000/api/webhook/whatsapp
WHATSAPP_APP_ID=your-whatsapp-app-id
WHATSAPP_APP_SECRET=your-whatsapp-app-secret
WHATSAPP_TOKEN=your-whatsapp-access-token
WHATSAPP_PHONE_ID=your-phone-number-id
WHATSAPP_PHONE_NUMBER=+1234567890
WHATSAPP_REDIRECT_URI=http://localhost:5000/api/oauth/whatsapp/callback
WHATSAPP_WEBHOOK_TOKEN=your-webhook-verification-token

# === GMAIL OAUTH ===
# Setup Google Cloud Project: https://console.cloud.google.com
# 1. Create new project or select existing
# 2. Enable Gmail API
# 3. Create OAuth 2.0 credentials (Web application)
# 4. Add authorized redirect URI: http://localhost:5000/api/oauth/gmail/callback
# 5. Add test users in OAuth consent screen
GMAIL_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GMAIL_CLIENT_SECRET=your-google-client-secret
GMAIL_REDIRECT_URI=http://localhost:5000/api/oauth/gmail/callback

# === OUTLOOK/MICROSOFT OAUTH ===
# Register app in Azure: https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps
# 1. App registrations → New registration
# 2. Supported account types: Personal Microsoft accounts
# 3. Add redirect URI: http://localhost:5000/api/oauth/outlook/callback
# 4. Generate client secret in Certificates & secrets
# 5. Add API permissions: Mail.ReadWrite, Calendar.ReadWrite
OUTLOOK_CLIENT_ID=your-microsoft-client-id
OUTLOOK_CLIENT_SECRET=your-microsoft-client-secret
OUTLOOK_REDIRECT_URI=http://localhost:5000/api/oauth/outlook/callback
OUTLOOK_TENANT_ID=common
# Use 'common' for personal accounts, or your tenant ID for work/school accounts

# === GOOGLE CALENDAR OAUTH ===
# Setup Google Cloud Project: https://console.cloud.google.com
# 1. Create new project or use existing Gmail project
# 2. Enable Google Calendar API
# 3. Use same OAuth 2.0 credentials as Gmail or create new ones
# 4. Add authorized redirect URI: http://localhost:5000/api/oauth/google-calendar/callback
# Note: Can share GOOGLE_CLIENT_ID/SECRET with Gmail if using same project
GOOGLE_CALENDAR_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CALENDAR_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALENDAR_REDIRECT_URI=http://localhost:5000/api/oauth/google-calendar/callback

# OR use shared Google credentials (if Gmail and Calendar use same project):
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# ManyChat Integration (Optional)
# Get API key from: https://manychat.com/api
MANYCHAT_API_KEY=

# -----------------
# BILLING & PAYMENTS
# -----------------

# Stripe Configuration (Required for billing via API-based checkout)
# Get keys from: https://dashboard.stripe.com/apikeys
# Webhook endpoint: https://dashboard.stripe.com/webhooks
STRIPE_SECRET_KEY=sk_test_your-key
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# Stripe Price IDs (Create in Stripe Dashboard → Products)
# Monthly Subscription Plans
STRIPE_PRICE_ID_MONTHLY_49=price_starter_plan      # Starter: $49/mo
STRIPE_PRICE_ID_MONTHLY_99=price_pro_plan          # Pro: $99/mo
STRIPE_PRICE_ID_MONTHLY_199=price_enterprise_plan  # Enterprise: $199/mo

# Top-up Products
STRIPE_PRICE_TOPUP_LEADS_1000=price_leads_1000     # 1,000 leads
STRIPE_PRICE_TOPUP_LEADS_2500=price_leads_2500     # 2,500 leads
STRIPE_PRICE_TOPUP_VOICE_100=price_voice_100       # 100 voice minutes
STRIPE_PRICE_TOPUP_VOICE_500=price_voice_500       # 500 voice minutes

# -----------------
# EMAIL SERVICE
# -----------------

# Resend Email API (Optional - for transactional emails)
# Get API key from: https://resend.com/api-keys
RESEND_API_KEY=

# -----------------
# SECURITY & ENCRYPTION
# -----------------

# Encryption Key (Required - generate secure 32-byte hex key)
# Generate with: openssl rand -hex 32
ENCRYPTION_KEY=your-32-byte-hex-key-for-aes-256

# JWT Secret (Required - generate secure random string)
# Generate with: openssl rand -base64 32
JWT_SECRET=your-jwt-secret

# Session Secret (Required - generate secure random string)
# Generate with: openssl rand -base64 32
SESSION_SECRET=your-session-secret

# -----------------
# APPLICATION CONFIGURATION
# -----------------

# Environment
NODE_ENV=development

# API Configuration
NEXT_PUBLIC_API_BASE=/api
DISABLE_EXTERNAL_API=false

# Demo Mode
NEXT_PUBLIC_DEMO=false

# -----------------
# TRIAL & PLAN LIMITS
# -----------------

# Trial Configuration
INVITE_TRIAL_DAYS=3
REQUIRE_CARD_ON_SIGNUP=false

# Plan Limits - Starter ($49/month)
VOICE_SECONDS_PLAN_49=100
LEADS_LIMIT_PLAN_49=2500

# Plan Limits - Pro ($99/month)
VOICE_SECONDS_PLAN_99=400
LEADS_LIMIT_PLAN_99=7000

# Plan Limits - Enterprise ($199/month)
VOICE_SECONDS_PLAN_199=1500
LEADS_LIMIT_PLAN_199=20000

# Top-up Catalog (Optional JSON Override)
# Customize available top-up options
USAGE_TOPUP_CATALOG_JSON=

# -----------------
# PRODUCTION DEPLOYMENT NOTES
# -----------------

# For production deployment:
# 1. Update all localhost URLs to your production domain
# 2. Use production API keys (remove 'test_' prefixes)
# 3. Set NODE_ENV=production
# 4. Ensure all OAuth redirect URIs are updated in provider dashboards
# 5. Configure webhook endpoints with production URLs
# 6. Enable webhook signature verification
# 7. Use strong, unique secrets for all security keys
# 8. Set up proper CORS policies
# 9. Enable rate limiting
# 10. Configure proper SSL/TLS certificates

# -----------------
# QUICK START GUIDE
# -----------------

# Minimum required for basic functionality:
# 1. Supabase credentials
# 2. OpenAI API key
# 3. At least one OAuth provider (Instagram/WhatsApp/Gmail/Outlook)
# 4. Encryption and session secrets

# Optional but recommended:
# 1. Stripe for billing
# 2. ElevenLabs for voice cloning
# 3. Redis for queue management
# 4. Email service for notifications
